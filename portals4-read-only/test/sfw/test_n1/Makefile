# Makefile.in generated by automake 1.14.1 from Makefile.am.
# test/sfw/test_n1/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/portals4
pkgincludedir = $(includedir)/portals4
pkglibdir = $(libdir)/portals4
pkglibexecdir = $(libexecdir)/portals4
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
subdir = test/sfw/test_n1
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/config/test-driver
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/libtool.m4 \
	$(top_srcdir)/config/libxml.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 \
	$(top_srcdir)/config/ompi_check_package.m4 \
	$(top_srcdir)/config/ompi_check_withdir.m4 \
	$(top_srcdir)/config/orte_check_pmi.m4 \
	$(top_srcdir)/config/sandia_check_ev.m4 \
	$(top_srcdir)/config/sandia_check_ofed.m4 \
	$(top_srcdir)/config/sandia_check_path.m4 \
	$(top_srcdir)/config/sandia_check_xpmem.m4 \
	$(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/config/ax_c_restrict.m4 \
	$(top_srcdir)/config/sandia_detect_compiler_type.m4 \
	$(top_srcdir)/config/sandia_check_atomics.m4 \
	$(top_srcdir)/config/sandia_check_bitfield_order.m4 \
	$(top_srcdir)/config/sandia_check_8aligned_malloc.m4 \
	$(top_srcdir)/config/sandia_check_16aligned_malloc.m4 \
	$(top_srcdir)/config/sandia_check_working_valloc.m4 \
	$(top_srcdir)/config/sandia_check_pthread_process_shared.m4 \
	$(top_srcdir)/config/sandia_check_attributes.m4 \
	$(top_srcdir)/config/sandia_choose_timer.m4 \
	$(top_srcdir)/config/sandia_detect_knem.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.xml.log=.log)
XML_LOG_DRIVER = $(SHELL) $(top_srcdir)/config/test-driver
XML_LOG_COMPILE = $(XML_LOG_COMPILER) $(AM_XML_LOG_FLAGS) \
	$(XML_LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/brian/src/pdht/portals4-read-only/config/missing aclocal-1.14
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /home/brian/src/pdht/portals4-read-only/config/missing autoconf
AUTOHEADER = ${SHELL} /home/brian/src/pdht/portals4-read-only/config/missing autoheader
AUTOMAKE = ${SHELL} /home/brian/src/pdht/portals4-read-only/config/missing automake-1.14
AWK = gawk
CC = gcc -std=gnu99
CCDEPMODE = depmode=gcc3
CFLAGS = -Wall -Wno-strict-aliasing -Wmissing-prototypes -Wstrict-prototypes -g -O2 -mcx16
CLEANFILES = *~ .\#* .gdb_history
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISTCHECK_CONFIGURE_FLAGS =  --enable-transport-ib=yes
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LD_VERSION_SCRIPT = -Wl,--version-script=$(srcdir)/ib/portals4.map
LIBOBJS = 
LIBS = -lrt -lpthread -ldl 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_WRAPPER_LDFLAGS = 
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/brian/src/pdht/portals4-read-only/config/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = portals4
PACKAGE_BUGREPORT = portals4-devel@googlegroups.com
PACKAGE_NAME = portals4
PACKAGE_STRING = portals4 1.0a1
PACKAGE_TARNAME = portals4
PACKAGE_URL = 
PACKAGE_VERSION = 1.0a1
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
TEST_RUNNER = $(top_builddir)/src/runtime/hydra/yod.hydra -np $(NPROCS)
VERSION = 1.0a1
XML2_CONFIG = /usr/bin/xml2-config
XML_CPPFLAGS = -I/usr/include/libxml2
XML_LIBS = -lxml2
XPMEM_CPPFLAGS = 
XPMEM_LDFLAGS = 
XPMEM_LIBS = 
abs_builddir = /home/brian/src/pdht/portals4-read-only/test/sfw/test_n1
abs_srcdir = /home/brian/src/pdht/portals4-read-only/test/sfw/test_n1
abs_top_builddir = /home/brian/src/pdht/portals4-read-only
abs_top_srcdir = /home/brian/src/pdht/portals4-read-only
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
ev_CPPFLAGS = 
ev_LDFLAGS = 
ev_LIBS = -lev  -lm
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/brian/src/pdht/portals4-read-only/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
ofed_CPPFLAGS =  
ofed_LDFLAGS =  
ofed_LIBS = -libverbs  -lrdmacm 
oldincludedir = /usr/include
pdfdir = ${docdir}
pmi_CPPFLAGS = -I$(top_srcdir)/src/runtime/portals4
pmi_LDFLAGS = 
pmi_LIBS = $(top_builddir)/src/runtime/libportals_runtime.la
prefix = /opt/hpctools
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  src/runtime/hydra
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..
TESTS = \
	test_advanced_le-001.xml \
	test_advanced_le-002.xml \
	test_advanced_le-003.xml \
	test_advanced_me-001.xml \
	test_advanced_me-002.xml \
	test_advanced_me-003.xml \
	test_atomic_all-001.xml \
	test_atomic_all-002.xml \
	test_atomic_all-003.xml \
	test_atomic_all-004.xml \
	test_atomic_all-005.xml \
	test_atomic_all-006.xml \
	test_atomic_all-007.xml \
	test_atomic_all-008.xml \
	test_atomic_all-009.xml \
	test_atomic_all-010.xml \
	test_atomic_all-011.xml \
	test_atomic_all-012.xml \
	test_atomic_all-013.xml \
	test_atomic_all-014.xml \
	test_atomic_all-015.xml \
	test_atomic_all-016.xml \
	test_atomic_all-017.xml \
	test_atomic_all-018.xml \
	test_atomic_all-019.xml \
	test_atomic_all-020.xml \
	test_atomic_all-021.xml \
	test_atomic_all-022.xml \
	test_atomic_all-023.xml \
	test_atomic_all-024.xml \
	test_atomic_all-025.xml \
	test_atomic_all-026.xml \
	test_atomic_all-027.xml \
	test_atomic_all-028.xml \
	test_atomic_all-029.xml \
	test_atomic_all-030.xml \
	test_atomic_all-031.xml \
	test_atomic_all-032.xml \
	test_atomic_all-033.xml \
	test_atomic_all-034.xml \
	test_atomic_all-035.xml \
	test_atomic_all-036.xml \
	test_atomic_all-037.xml \
	test_atomic_all-038.xml \
	test_atomic_all-039.xml \
	test_atomic_all-040.xml \
	test_atomic_all-041.xml \
	test_atomic_all-042.xml \
	test_atomic_all-043.xml \
	test_atomic_all-044.xml \
	test_atomic_all-045.xml \
	test_atomic_all-046.xml \
	test_atomic_all-047.xml \
	test_atomic_all-048.xml \
	test_atomic_all-049.xml \
	test_atomic_all-050.xml \
	test_atomic_all-051.xml \
	test_atomic_all-052.xml \
	test_atomic_all-053.xml \
	test_atomic_all-054.xml \
	test_atomic_all-055.xml \
	test_atomic_all-056.xml \
	test_atomic_all-057.xml \
	test_atomic_all-058.xml \
	test_atomic_all-059.xml \
	test_atomic_all-060.xml \
	test_atomic_all-061.xml \
	test_atomic_all-062.xml \
	test_atomic_all-063.xml \
	test_atomic_all-064.xml \
	test_atomic_all-065.xml \
	test_atomic_all-066.xml \
	test_atomic_all-067.xml \
	test_atomic_all-068.xml \
	test_atomic_all-069.xml \
	test_atomic_all-070.xml \
	test_atomic_all-071.xml \
	test_atomic_all-072.xml \
	test_atomic_all-073.xml \
	test_atomic_all-074.xml \
	test_atomic_all-075.xml \
	test_atomic_all-076.xml \
	test_atomic_all-077.xml \
	test_atomic_all-078.xml \
	test_atomic_all-079.xml \
	test_atomic_all-080.xml \
	test_atomic_all-081.xml \
	test_atomic_all-082.xml \
	test_atomic_all-083.xml \
	test_atomic_all-084.xml \
	test_atomic_all-085.xml \
	test_atomic_all-086.xml \
	test_atomic_all-087.xml \
	test_atomic_all-088.xml \
	test_atomic_all-089.xml \
	test_atomic_all-090.xml \
	test_atomic_all-091.xml \
	test_atomic_all-092.xml \
	test_atomic_all-093.xml \
	test_atomic_all-094.xml \
	test_atomic_all-095.xml \
	test_atomic_all-096.xml \
	test_atomic_all-097.xml \
	test_atomic_all-098.xml \
	test_atomic_all-099.xml \
	test_atomic_all-100.xml \
	test_atomic_all-101.xml \
	test_atomic_all-102.xml \
	test_atomic_all-103.xml \
	test_atomic_all-104.xml \
	test_atomic_all-105.xml \
	test_atomic_all-106.xml \
	test_atomic_all-107.xml \
	test_atomic_all-108.xml \
	test_atomic_all-109.xml \
	test_atomic_all-110.xml \
	test_atomic_all-111.xml \
	test_atomic_all-112.xml \
	test_atomic_all-113.xml \
	test_atomic_all-114.xml \
	test_atomic_all-115.xml \
	test_atomic_all-116.xml \
	test_atomic_all-117.xml \
	test_atomic_all-118.xml \
	test_atomic_all-119.xml \
	test_atomic_all-120.xml \
	test_atomic_all-121.xml \
	test_atomic_all-122.xml \
	test_atomic_all-123.xml \
	test_atomic_all-124.xml \
	test_atomic_all-125.xml \
	test_atomic_all-126.xml \
	test_atomic_all-127.xml \
	test_atomic_all-128.xml \
	test_atomic_all-129.xml \
	test_atomic_all-130.xml \
	test_atomic_all-131.xml \
	test_atomic_all-132.xml \
	test_atomic_all-133.xml \
	test_atomic_all-134.xml \
	test_atomic_all-135.xml \
	test_atomic_all-136.xml \
	test_atomic_all-137.xml \
	test_atomic_all-138.xml \
	test_atomic_all-139.xml \
	test_atomic_all-140.xml \
	test_atomic_all-141.xml \
	test_atomic_all-142.xml \
	test_atomic_all-143.xml \
	test_atomic_all-144.xml \
	test_atomic_all-145.xml \
	test_atomic_all-146.xml \
	test_atomic_all-147.xml \
	test_atomic_all-148.xml \
	test_atomic_all-149.xml \
	test_atomic_all-150.xml \
	test_atomic_all-151.xml \
	test_atomic_all-152.xml \
	test_atomic_all-153.xml \
	test_atomic_all-154.xml \
	test_atomic_all-155.xml \
	test_atomic_all-156.xml \
	test_atomic_all-157.xml \
	test_atomic_all-158.xml \
	test_atomic_all-159.xml \
	test_atomic_all-160.xml \
	test_atomic_all-161.xml \
	test_atomic_all-162.xml \
	test_atomic_all-163.xml \
	test_atomic_all-164.xml \
	test_atomic_all-165.xml \
	test_atomic_all-166.xml \
	test_atomic_all-167.xml \
	test_atomic_all-168.xml \
	test_atomic_all-169.xml \
	test_atomic_all-170.xml \
	test_atomic_all-171.xml \
	test_atomic_all-172.xml \
	test_atomic_all-173.xml \
	test_atomic_all-174.xml \
	test_atomic_all-175.xml \
	test_atomic_all-176.xml \
	test_atomic_all-177.xml \
	test_atomic_all-178.xml \
	test_atomic_all-179.xml \
	test_atomic_all-180.xml \
	test_atomic_all-181.xml \
	test_atomic_all-182.xml \
	test_atomic_all-183.xml \
	test_atomic_all-184.xml \
	test_atomic_all-185.xml \
	test_atomic_all-186.xml \
	test_atomic_all-187.xml \
	test_atomic_all-188.xml \
	test_atomic_all-189.xml \
	test_atomic_all-190.xml \
	test_atomic_all-191.xml \
	test_atomic_all-192.xml \
	test_atomic_all-193.xml \
	test_atomic_all-194.xml \
	test_atomic_all-195.xml \
	test_atomic_all-196.xml \
	test_atomic_logical_lb-001.xml \
	test_atomic_logical_lb-002.xml \
	test_atomic_logical_lb-003.xml \
	test_atomic_logical_lb-004.xml \
	test_atomic_logical_lb-005.xml \
	test_atomic_logical_lb-006.xml \
	test_atomic_logical_lb-007.xml \
	test_atomic_logical_lb-008.xml \
	test_atomic_logical_lb-009.xml \
	test_atomic_logical_lb-010.xml \
	test_atomic_physical_lb-001.xml \
	test_atomic_physical_lb-002.xml \
	test_atomic_physical_lb-003.xml \
	test_atomic_physical_lb-004.xml \
	test_atomic_physical_lb-005.xml \
	test_atomic_physical_lb-006.xml \
	test_atomic_physical_lb-007.xml \
	test_atomic_physical_lb-008.xml \
	test_atomic_physical_lb-009.xml \
	test_atomic_physical_lb-010.xml \
	test_basic_bundle-001.xml \
	test_basic_bundle-002.xml \
	test_basic_bundle-003.xml \
	test_basic_bundle-004.xml \
	test_basic_ct-001.xml \
	test_basic_ct-002.xml \
	test_basic_ct-003.xml \
	test_basic_ct-004.xml \
	test_basic_ct-005.xml \
	test_basic_ct-006.xml \
	test_basic_ct-007.xml \
	test_basic_ct-008.xml \
	test_basic_ct-009.xml \
	test_basic_ct-010.xml \
	test_basic_ct-011.xml \
	test_basic_ct-012.xml \
	test_basic_ct-013.xml \
	test_basic_ct-014.xml \
	test_basic_ct-015.xml \
	test_basic_ct-016.xml \
	test_basic_ct-017.xml \
	test_basic_ct-018.xml \
	test_basic_ct-019.xml \
	test_basic_ct-020.xml \
	test_basic_ct-021.xml \
	test_basic_ct-022.xml \
	test_basic_ct-023.xml \
	test_basic_ct-024.xml \
	test_basic_ct-025.xml \
	test_basic_ct-026.xml \
	test_basic_ct-027.xml \
	test_basic_ct-028.xml \
	test_basic_ct-029.xml \
	test_basic_ct-030.xml \
	test_basic_ct-031.xml \
	test_basic_ct-032.xml \
	test_basic_ct-033.xml \
	test_basic_ct-034.xml \
	test_basic_ct-035.xml \
	test_basic_ct-036.xml \
	test_basic_ct-037.xml \
	test_basic_ct-038.xml \
	test_basic_ct-039.xml \
	test_basic_ct-040.xml \
	test_basic_ct-041.xml \
	test_basic_ct-042.xml \
	test_basic_ct-043.xml \
	test_basic_ct-044.xml \
	test_basic_eq-001.xml \
	test_basic_eq-002.xml \
	test_basic_eq-003.xml \
	test_basic_eq-004.xml \
	test_basic_eq-005.xml \
	test_basic_eq-006.xml \
	test_basic_eq-007.xml \
	test_basic_eq-008.xml \
	test_basic_eq-009.xml \
	test_basic_eq-010.xml \
	test_basic_eq-011.xml \
	test_basic_eq-012.xml \
	test_basic_eq-013.xml \
	test_basic_eq-014.xml \
	test_basic_eq-015.xml \
	test_basic_handle-001.xml \
	test_basic_handle-002.xml \
	test_basic_id-001.xml \
	test_basic_id-002.xml \
	test_basic_id-003.xml \
	test_basic_id-004.xml \
	test_basic_id-005.xml \
	test_basic_id-006.xml \
	test_basic_init-001.xml \
	test_basic_init-002.xml \
	test_basic_init-003.xml \
	test_basic_le-001.xml \
	test_basic_le-002.xml \
	test_basic_le-003.xml \
	test_basic_le-004.xml \
	test_basic_le-005.xml \
	test_basic_le-006.xml \
	test_basic_le-007.xml \
	test_basic_le-008.xml \
	test_basic_le-009.xml \
	test_basic_le-010.xml \
	test_basic_le-011.xml \
	test_basic_le-012.xml \
	test_basic_le-013.xml \
	test_basic_le-014.xml \
	test_basic_le-015.xml \
	test_basic_le-016.xml \
	test_basic_le-017.xml \
	test_basic_le-018.xml \
	test_basic_le-019.xml \
	test_basic_le-020.xml \
	test_basic_le-021.xml \
	test_basic_le-022.xml \
	test_basic_md-001.xml \
	test_basic_md-002.xml \
	test_basic_md-003.xml \
	test_basic_md-004.xml \
	test_basic_md-005.xml \
	test_basic_md-006.xml \
	test_basic_md-007.xml \
	test_basic_md-008.xml \
	test_basic_md-009.xml \
	test_basic_me-001.xml \
	test_basic_me-002.xml \
	test_basic_me-003.xml \
	test_basic_me-004.xml \
	test_basic_me-005.xml \
	test_basic_me-006.xml \
	test_basic_me-007.xml \
	test_basic_me-008.xml \
	test_basic_me-009.xml \
	test_basic_me-010.xml \
	test_basic_me-011.xml \
	test_basic_me-012.xml \
	test_basic_me-013.xml \
	test_basic_me-014.xml \
	test_basic_me-015.xml \
	test_basic_me-016.xml \
	test_basic_me-017.xml \
	test_basic_me-018.xml \
	test_basic_me-019.xml \
	test_basic_me-020.xml \
	test_basic_me-021.xml \
	test_basic_me-022.xml \
	test_basic_move-001.xml \
	test_basic_move-002.xml \
	test_basic_move-003.xml \
	test_basic_move-004.xml \
	test_basic_move-005.xml \
	test_basic_move-006.xml \
	test_basic_move-007.xml \
	test_basic_move-008.xml \
	test_basic_move-009.xml \
	test_basic_move-010.xml \
	test_basic_move-011.xml \
	test_basic_move-012.xml \
	test_basic_move-013.xml \
	test_basic_move-014.xml \
	test_basic_move-015.xml \
	test_basic_move-016.xml \
	test_basic_move-017.xml \
	test_basic_move-018.xml \
	test_basic_move-019.xml \
	test_basic_move-020.xml \
	test_basic_move-021.xml \
	test_basic_move-022.xml \
	test_basic_move-023.xml \
	test_basic_move-024.xml \
	test_basic_move-025.xml \
	test_basic_move-026.xml \
	test_basic_move-027.xml \
	test_basic_move-028.xml \
	test_basic_move-029.xml \
	test_basic_move-030.xml \
	test_basic_move-031.xml \
	test_basic_move-032.xml \
	test_basic_move-033.xml \
	test_basic_move-034.xml \
	test_basic_move-035.xml \
	test_basic_move-036.xml \
	test_basic_ni-001.xml \
	test_basic_ni-002.xml \
	test_basic_ni-003.xml \
	test_basic_ni-004.xml \
	test_basic_ni-005.xml \
	test_basic_ni-006.xml \
	test_basic_ni-007.xml \
	test_basic_ni-008.xml \
	test_basic_ni-009.xml \
	test_basic_ni-010.xml \
	test_basic_ni-011.xml \
	test_basic_ni-012.xml \
	test_basic_ni-013.xml \
	test_basic_ni-014.xml \
	test_basic_ni-015.xml \
	test_basic_ni-016.xml \
	test_basic_ni-017.xml \
	test_basic_ni-018.xml \
	test_basic_ni-019.xml \
	test_basic_pt-001.xml \
	test_basic_pt-002.xml \
	test_basic_pt-003.xml \
	test_basic_pt-004.xml \
	test_basic_pt-005.xml \
	test_basic_pt-006.xml \
	test_basic_pt-007.xml \
	test_basic_pt-008.xml \
	test_basic_pt-009.xml \
	test_basic_pt-010.xml \
	test_basic_pt-011.xml \
	test_basic_pt-012.xml \
	test_basic_pt-013.xml \
	test_basic_pt-014.xml \
	test_basic_pt-015.xml \
	test_basic_pt-016.xml \
	test_basic_pt-017.xml \
	test_basic_pt-018.xml \
	test_basic_pt-019.xml \
	test_basic_pt-020.xml \
	test_basic_pt-021.xml \
	test_basic_pt-022.xml \
	test_basic_pt-023.xml \
	test_basic_pt-024.xml \
	test_basic_pt-025.xml \
	test_basic_pt-026.xml \
	test_basic_trig-001.xml \
	test_basic_trig-002.xml \
	test_basic_trig-003.xml \
	test_basic_trig-004.xml \
	test_basic_trig-005.xml \
	test_basic_trig-006.xml \
	test_basic_trig-007.xml \
	test_basic_trig-008.xml \
	test_basic_trig-009.xml \
	test_basic_trig-010.xml \
	test_basic_trig-011.xml \
	test_basic_trig-012.xml \
	test_basic_trig-013.xml \
	test_basic_trig-014.xml \
	test_basic_trig-015.xml \
	test_basic_trig-016.xml \
	test_basic_trig-017.xml \
	test_basic_trig-018.xml \
	test_basic_trig-019.xml \
	test_ct_events-001.xml \
	test_ct_events-002.xml \
	test_ct_events-003.xml \
	test_ct_events-004.xml \
	test_ct_events-005.xml \
	test_ct_events-006.xml \
	test_ct_events-007.xml \
	test_ct_events-008.xml \
	test_ct_events-009.xml \
	test_ct_events-010.xml \
	test_ct_events-011.xml \
	test_ct_events-012.xml \
	test_ct_events-013.xml \
	test_ct_events-014.xml \
	test_ct_events-015.xml \
	test_ct_events-016.xml \
	test_ct_events-017.xml \
	test_ct_events-018.xml \
	test_ct_events-019.xml \
	test_ct_events-020.xml \
	test_ct_events-021.xml \
	test_ct_events-022.xml \
	test_ct_events-023.xml \
	test_ct_events-024.xml \
	test_ct_events-025.xml \
	test_ct_events-026.xml \
	test_ct_events-027.xml \
	test_ct_events-028.xml \
	test_ct_events-029.xml \
	test_ct_events-030.xml \
	test_ct_events-031.xml \
	test_ct_events-032.xml \
	test_ct_events-033.xml \
	test_ct_events-034.xml \
	test_ct_events-035.xml \
	test_ct_events-036.xml \
	test_ct_events-037.xml \
	test_ct_events-038.xml \
	test_ct_events-039.xml \
	test_ct_events-040.xml \
	test_ct_events-041.xml \
	test_ct_events-042.xml \
	test_ct_events-043.xml \
	test_ct_events-044.xml \
	test_ct_events-045.xml \
	test_ct_events-046.xml \
	test_ct_events-047.xml \
	test_ct_events-048.xml \
	test_ct_events-049.xml \
	test_limits-001.xml \
	test_limits-002.xml \
	test_limits-003.xml \
	test_limits-004.xml \
	test_limits-005.xml \
	test_limits-006.xml \
	test_limits-007.xml \
	test_limits-008.xml \
	test_limits-009.xml \
	test_limits-010.xml \
	test_limits-011.xml \
	test_limits-012.xml \
	test_limits-013.xml \
	test_limits-014.xml \
	test_limits-015.xml \
	test_limits-016.xml \
	test_limits-017.xml \
	test_limits-018.xml \
	test_limits-019.xml \
	test_limits-020.xml \
	test_limits-021.xml \
	test_limits-022.xml \
	test_limits-023.xml \
	test_limits-024.xml \
	test_limits-025.xml \
	test_limits-026.xml \
	test_limits-027.xml \
	test_limits-028.xml \
	test_limits-029.xml \
	test_limits-030.xml \
	test_limits-031.xml \
	test_limits-032.xml \
	test_limits-033.xml \
	test_limits-034.xml \
	test_limits-035.xml \
	test_limits-036.xml \
	test_limits-037.xml \
	test_limits-038.xml \
	test_limits-039.xml \
	test_limits-040.xml \
	test_limits-041.xml \
	test_limits-042.xml \
	test_limits-043.xml \
	test_limits-044.xml \
	test_limits-045.xml \
	test_limits-046.xml \
	test_limits-047.xml \
	test_limits-048.xml \
	test_limits-049.xml \
        test_mapping-001.xml \
	test_mapping-002.xml \
	test_mapping-003.xml \
	test_short-001.xml \
	test_short-002.xml \
	test_swap_all-001.xml \
	test_swap_all-002.xml \
	test_swap_all-003.xml \
	test_swap_all-004.xml \
	test_swap_all-005.xml \
	test_swap_all-006.xml \
	test_swap_all-007.xml \
	test_swap_all-008.xml \
	test_swap_all-009.xml \
	test_swap_all-010.xml \
	test_swap_all-011.xml \
	test_swap_all-012.xml \
	test_swap_all-013.xml \
	test_swap_all-014.xml \
	test_swap_all-015.xml \
	test_swap_all-016.xml \
	test_swap_all-017.xml \
	test_swap_all-018.xml \
	test_swap_all-019.xml \
	test_swap_all-020.xml \
	test_swap_all-021.xml \
	test_swap_all-022.xml \
	test_swap_all-023.xml \
	test_swap_all-024.xml \
	test_swap_all-025.xml \
	test_swap_all-026.xml \
	test_swap_all-027.xml \
	test_swap_all-028.xml \
	test_swap_all-029.xml \
	test_swap_all-030.xml \
	test_swap_all-031.xml \
	test_swap_all-032.xml \
	test_swap_all-033.xml \
	test_swap_all-034.xml \
	test_swap_all-035.xml \
	test_swap_all-036.xml \
	test_swap_all-037.xml \
	test_swap_all-038.xml \
	test_swap_all-039.xml \
	test_swap_all-040.xml \
	test_swap_all-041.xml \
	test_swap_all-042.xml \
	test_swap_all-043.xml \
	test_swap_all-044.xml \
	test_swap_all-045.xml \
	test_swap_all-046.xml \
	test_swap_all-047.xml \
	test_swap_all-048.xml \
	test_swap_all-049.xml \
	test_swap_all-050.xml \
	test_swap_all-051.xml \
	test_swap_all-052.xml \
	test_swap_all-053.xml \
	test_swap_all-054.xml \
	test_swap_all-055.xml \
	test_swap_all-056.xml \
	test_swap_all-057.xml \
	test_swap_all-058.xml \
	test_swap_all-059.xml \
	test_swap_all-060.xml \
	test_swap_all-061.xml \
	test_swap_all-062.xml \
	test_swap_all-063.xml \
	test_swap_all-064.xml \
	test_swap_all-065.xml \
	test_swap_all-066.xml \
	test_swap_all-067.xml \
	test_swap_all-068.xml \
	test_swap_all-069.xml \
	test_swap_all-070.xml \
	test_swap_all-071.xml \
	test_swap_all-072.xml \
	test_swap_all-073.xml \
	test_swap_all-074.xml \
	test_swap_all-075.xml \
	test_swap_all-076.xml \
	test_swap_all-077.xml \
	test_swap_all-078.xml \
	test_swap_all-079.xml \
	test_swap_all-080.xml \
	test_swap_all-081.xml \
	test_swap_all-082.xml \
	test_swap_all-083.xml \
	test_swap_all-084.xml \
	test_swap_all-085.xml \
	test_swap_all-086.xml \
	test_swap_all-087.xml \
	test_swap_all-088.xml \
	test_swap_all-089.xml \
	test_swap_all-090.xml \
	test_swap_all-091.xml \
	test_swap_all-092.xml \
	test_swap_all-093.xml \
	test_swap_all-094.xml \
	test_swap_all-095.xml \
	test_swap_all-096.xml \
	test_swap_all-097.xml \
	test_swap_all-098.xml \
	test_swap_all-099.xml \
	test_swap_all-100.xml \
	test_swap_all-101.xml \
	test_swap_all-102.xml \
	test_swap_all-103.xml \
	test_swap_all-104.xml \
	test_swap_all-105.xml \
	test_swap_all-106.xml \
	test_swap_all-107.xml \
	test_swap_all-108.xml \
	test_swap_all-109.xml \
	test_swap_all-110.xml \
	test_swap_all-111.xml \
	test_swap_all-112.xml \
	test_swap_all-113.xml \
	test_swap_all-114.xml \
	test_swap_all-115.xml \
	test_swap_all-116.xml \
	test_swap_all-117.xml \
	test_swap_all-118.xml \
	test_swap_all-119.xml \
	test_swap_all-120.xml \
	test_swap_all-121.xml \
	test_swap_all-122.xml \
	test_swap_all-123.xml \
	test_swap_all-124.xml \
	test_swap_all-125.xml \
	test_swap_all-126.xml \
	test_swap_all-127.xml \
	test_swap_all-128.xml \
	test_swap_all-129.xml \
	test_swap_all-130.xml \
	test_swap_all-131.xml \
	test_swap_all-132.xml \
	test_swap_all-133.xml \
	test_swap_all-134.xml \
	test_swap_all-135.xml \
	test_swap_all-136.xml \
	test_swap_all-137.xml \
	test_swap_all-138.xml \
	test_swap_all-139.xml \
	test_swap_all-140.xml \
	test_swap_all-141.xml \
	test_swap_all-142.xml \
	test_swap_all-143.xml \
	test_swap_all-144.xml \
	test_swap_all-145.xml \
	test_swap_all-146.xml \
	test_swap_all-147.xml \
	test_swap_all-148.xml \
	test_swap_all-149.xml \
	test_swap_all-150.xml \
	test_swap_all-151.xml \
	test_swap_all-152.xml \
	test_swap_all-153.xml \
	test_swap_all-154.xml \
	test_swap_all-155.xml \
	test_swap_all-156.xml \
	test_swap_all-157.xml \
	test_swap_all-158.xml \
	test_swap_all-159.xml \
	test_swap_all-160.xml \
	test_swap_all-161.xml \
	test_swap_all-162.xml \
	test_swap_all-163.xml \
	test_swap_all-164.xml \
	test_swap_all-165.xml \
	test_swap_all-166.xml \
	test_swap_all-167.xml \
	test_swap_all-168.xml \
	test_swap_all-169.xml \
	test_swap_all-170.xml \
	test_swap_all-171.xml \
	test_swap_all-172.xml \
	test_swap_all-173.xml \
	test_swap_all-174.xml \
	test_swap_all-175.xml \
	test_swap_all-176.xml \
	test_swap_all-177.xml \
	test_swap_all-178.xml \
	test_swap_all-179.xml \
	test_swap_all-180.xml \
	test_swap_all-181.xml \
	test_swap_all-182.xml \
	test_swap_all-183.xml \
	test_swap_all-184.xml \
	test_swap_all-185.xml \
	test_swap_all-186.xml \
	test_swap_all-187.xml \
	test_swap_all-188.xml \
	test_swap_all-189.xml \
	test_swap_all-190.xml \
	test_swap_all-191.xml \
	test_swap_all-192.xml \
	test_swap_all-193.xml \
	test_swap_all-194.xml \
	test_swap_all-195.xml \
	test_swap_all-196.xml \
	test_swap_all-197.xml \
	test_swap_all-198.xml \
	test_swap_all-199.xml \
	test_swap_all-200.xml \
	test_swap_all-201.xml \
	test_swap_all-202.xml \
	test_swap_all-203.xml \
	test_swap_all-204.xml \
	test_swap_all-205.xml \
	test_swap_all-206.xml \
	test_swap_all-207.xml \
	test_swap_all-208.xml \
	test_swap_all-209.xml \
	test_swap_all-210.xml \
	test_swap_logical_lb-001.xml \
	test_swap_logical_lb-002.xml \
	test_swap_logical_lb-003.xml \
	test_swap_logical_lb-004.xml \
	test_swap_logical_lb-005.xml \
	test_swap_logical_lb-006.xml \
	test_swap_logical_lb-007.xml \
	test_swap_logical_lb-008.xml \
	test_swap_logical_lb-009.xml \
	test_swap_logical_lb-010.xml \
	test_swap_logical_lb-011.xml \
	test_swap_logical_lb-012.xml \
	test_swap_logical_lb-013.xml \
	test_swap_logical_lb-014.xml \
	test_swap_logical_lb-015.xml \
	test_swap_logical_lb-016.xml \
	test_swap_logical_lb-017.xml \
	test_swap_logical_lb-018.xml \
	test_swap_logical_lb-019.xml \
	test_swap_logical_lb-020.xml \
	test_swap_logical_lb-021.xml \
	test_swap_logical_lb-022.xml \
	test_swap_logical_lb-023.xml \
	test_swap_logical_lb-024.xml \
	test_swap_logical_lb-025.xml \
	test_swap_logical_lb-026.xml \
	test_swap_logical_lb-027.xml \
	test_swap_logical_lb-028.xml \
	test_swap_logical_lb-029.xml \
	test_swap_logical_lb-030.xml \
	test_swap_logical_lb-031.xml \
	test_swap_logical_lb-032.xml \
	test_swap_logical_lb-033.xml \
	test_swap_logical_lb-034.xml \
	test_swap_logical_lb-035.xml \
	test_swap_logical_lb-036.xml \
	test_swap_logical_lb-037.xml \
	test_swap_logical_lb-038.xml \
	test_swap_logical_lb-039.xml \
	test_swap_logical_lb-040.xml \
	test_swap_logical_lb-041.xml \
	test_swap_logical_lb-042.xml \
	test_swap_logical_lb-043.xml \
	test_swap_logical_lb-044.xml \
	test_swap_logical_lb-045.xml \
	test_swap_logical_lb-046.xml \
	test_swap_logical_lb-047.xml \
	test_swap_logical_lb-048.xml \
	test_swap_logical_lb-049.xml \
	test_swap_logical_lb-050.xml \
	test_swap_logical_lb-051.xml \
	test_swap_logical_lb-052.xml \
	test_swap_logical_lb-053.xml \
	test_swap_logical_lb-054.xml \
	test_swap_logical_lb-055.xml \
	test_swap_logical_lb-056.xml \
	test_swap_logical_lb-057.xml \
	test_swap_logical_lb-058.xml \
	test_swap_logical_lb-059.xml \
	test_swap_logical_lb-060.xml \
	test_swap_logical_lb-061.xml \
	test_swap_logical_lb-062.xml \
	test_swap_logical_lb-063.xml \
	test_swap_logical_lb-064.xml \
	test_swap_logical_lb-065.xml \
	test_swap_logical_lb-066.xml \
	test_swap_logical_lb-067.xml \
	test_swap_logical_lb-068.xml \
	test_swap_logical_lb-069.xml \
	test_swap_logical_lb-070.xml \
	test_swap_logical_lb-071.xml \
	test_swap_logical_lb-072.xml \
	test_swap_logical_lb-073.xml \
	test_swap_logical_lb-074.xml \
	test_swap_logical_lb-075.xml \
	test_swap_logical_lb-076.xml \
	test_swap_logical_lb-077.xml \
	test_swap_logical_lb-078.xml \
	test_swap_logical_lb-079.xml \
	test_swap_logical_lb-080.xml \
	test_swap_logical_lb-081.xml \
	test_swap_logical_lb-082.xml \
	test_swap_logical_lb-083.xml \
	test_swap_logical_lb-084.xml \
	test_swap_logical_lb-085.xml \
	test_swap_logical_lb-086.xml \
	test_swap_logical_lb-087.xml \
	test_swap_logical_lb-088.xml \
	test_swap_logical_lb-089.xml \
	test_swap_logical_lb-090.xml \
	test_swap_logical_lb-091.xml \
	test_swap_logical_lb-092.xml \
	test_swap_logical_lb-093.xml \
	test_swap_logical_lb-094.xml \
	test_swap_logical_lb-095.xml \
	test_swap_logical_lb-096.xml \
	test_swap_logical_lb-097.xml \
	test_swap_logical_lb-098.xml \
	test_swap_logical_lb-099.xml \
	test_swap_logical_lb-100.xml \
	test_swap_physical_lb-001.xml \
	test_swap_physical_lb-002.xml \
	test_swap_physical_lb-003.xml \
	test_swap_physical_lb-004.xml \
	test_swap_physical_lb-005.xml \
	test_swap_physical_lb-006.xml \
	test_swap_physical_lb-007.xml \
	test_swap_physical_lb-008.xml \
	test_swap_physical_lb-009.xml \
	test_swap_physical_lb-010.xml \
	test_swap_physical_lb-011.xml \
	test_swap_physical_lb-012.xml \
	test_swap_physical_lb-013.xml \
	test_swap_physical_lb-014.xml \
	test_swap_physical_lb-015.xml \
	test_swap_physical_lb-016.xml \
	test_swap_physical_lb-017.xml \
	test_swap_physical_lb-018.xml \
	test_swap_physical_lb-019.xml \
	test_swap_physical_lb-020.xml \
	test_swap_physical_lb-021.xml \
	test_swap_physical_lb-022.xml \
	test_swap_physical_lb-023.xml \
	test_swap_physical_lb-024.xml \
	test_swap_physical_lb-025.xml \
	test_swap_physical_lb-026.xml \
	test_swap_physical_lb-027.xml \
	test_swap_physical_lb-028.xml \
	test_swap_physical_lb-029.xml \
	test_swap_physical_lb-030.xml \
	test_swap_physical_lb-031.xml \
	test_swap_physical_lb-032.xml \
	test_swap_physical_lb-033.xml \
	test_swap_physical_lb-034.xml \
	test_swap_physical_lb-035.xml \
	test_swap_physical_lb-036.xml \
	test_swap_physical_lb-037.xml \
	test_swap_physical_lb-038.xml \
	test_swap_physical_lb-039.xml \
	test_swap_physical_lb-040.xml \
	test_swap_physical_lb-041.xml \
	test_swap_physical_lb-042.xml \
	test_swap_physical_lb-043.xml \
	test_swap_physical_lb-044.xml \
	test_swap_physical_lb-045.xml \
	test_swap_physical_lb-046.xml \
	test_swap_physical_lb-047.xml \
	test_swap_physical_lb-048.xml \
	test_swap_physical_lb-049.xml \
	test_swap_physical_lb-050.xml \
	test_swap_physical_lb-051.xml \
	test_swap_physical_lb-052.xml \
	test_swap_physical_lb-053.xml \
	test_swap_physical_lb-054.xml \
	test_swap_physical_lb-055.xml \
	test_swap_physical_lb-056.xml \
	test_swap_physical_lb-057.xml \
	test_swap_physical_lb-058.xml \
	test_swap_physical_lb-059.xml \
	test_swap_physical_lb-060.xml \
	test_swap_physical_lb-061.xml \
	test_swap_physical_lb-062.xml \
	test_swap_physical_lb-063.xml \
	test_swap_physical_lb-064.xml \
	test_swap_physical_lb-065.xml \
	test_swap_physical_lb-066.xml \
	test_swap_physical_lb-067.xml \
	test_swap_physical_lb-068.xml \
	test_swap_physical_lb-069.xml \
	test_swap_physical_lb-070.xml \
	test_swap_physical_lb-071.xml \
	test_swap_physical_lb-072.xml \
	test_swap_physical_lb-073.xml \
	test_swap_physical_lb-074.xml \
	test_swap_physical_lb-075.xml \
	test_swap_physical_lb-076.xml \
	test_swap_physical_lb-077.xml \
	test_swap_physical_lb-078.xml \
	test_swap_physical_lb-079.xml \
	test_swap_physical_lb-080.xml \
	test_swap_physical_lb-081.xml \
	test_swap_physical_lb-082.xml \
	test_swap_physical_lb-083.xml \
	test_swap_physical_lb-084.xml \
	test_swap_physical_lb-085.xml \
	test_swap_physical_lb-086.xml \
	test_swap_physical_lb-087.xml \
	test_swap_physical_lb-088.xml \
	test_swap_physical_lb-089.xml \
	test_swap_physical_lb-090.xml \
	test_swap_physical_lb-091.xml \
	test_swap_physical_lb-092.xml \
	test_swap_physical_lb-093.xml \
	test_swap_physical_lb-094.xml \
	test_swap_physical_lb-095.xml \
	test_swap_physical_lb-096.xml \
	test_swap_physical_lb-097.xml \
	test_swap_physical_lb-098.xml \
	test_swap_physical_lb-099.xml \
	test_swap_physical_lb-100.xml \
	test_unlink-001.xml \
	test_unlink-002.xml \
	test_unlink-003.xml \
	test_unlink-004.xml \
	test_unlink-005.xml \
	test_unlink-006.xml \
	test_unlink-007.xml \
	test_unlink-008.xml \
	test_unlink-009.xml \
	test_unlink-010.xml \
	test_unlink-011.xml \
	test_unlink-012.xml \
	test_unlink-013.xml \
	test_unlink-014.xml \
	test_unlink-015.xml \
	test_unlink-016.xml \
	test_unlink-017.xml \
	test_unlink-018.xml \
	test_unlink-019.xml \
	test_unlink-020.xml

EXTRA_DIST = $(TESTS)
NPROCS = 1
TEST_EXTENSIONS = .xml
XML_LOG_COMPILER = $(TEST_RUNNER) ../ptl_test -b $(srcdir)/ -f
AM_XML_LOG_FLAGS = 
all: all-am

.SUFFIXES:
.SUFFIXES: .log .trs .xml .xml$(EXEEXT)
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign test/sfw/test_n1/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign test/sfw/test_n1/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
tags TAGS:

ctags CTAGS:

cscope cscopelist:


# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
.xml.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(XML_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_XML_LOG_DRIVER_FLAGS) $(XML_LOG_DRIVER_FLAGS) -- $(XML_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.xml$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(XML_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_XML_LOG_DRIVER_FLAGS) $(XML_LOG_DRIVER_FLAGS) -- $(XML_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: all all-am check check-TESTS check-am clean clean-generic \
	clean-libtool cscopelist-am ctags-am distclean \
	distclean-generic distclean-libtool distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am recheck tags-am \
	uninstall uninstall-am


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
